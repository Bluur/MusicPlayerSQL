package main;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.SwingUtilities;

/**
 * 
 * Reproductor que recibe el archivo a ejecutar.
 * <h1> WAV Único formato soportado, adjunto una playlist con 3 canciones
 * presentes en la carpeta principal del proyecto </h1>
 * Source -> 
 * https://www.tutorialspoint.com/swingexamples/show_standard_progress_bar.htm?msclkid=30ca76eacff411ec90ad2efec24fff96
 */
public class Reproductor extends javax.swing.JDialog {

    private File archivo;
    private Clip clip;
    private Task tarea;

    /**
     * Constructor de la clase, encargado de crear el stream de Audio
     * crear el clip con este y abrir el clip para reproducirlo.
     * @param parent -> Ventanada de la que hereda
     * @param modal -> Modo de apertura
     * @param archivo -> Archivo de la canción
     */
    public Reproductor(java.awt.Frame parent, boolean modal, File archivo) {
        super(parent, modal);
        this.archivo = archivo;
        initComponents();
        jl1.setText("Currently Playing => "+archivo.getName());

        try {
            AudioInputStream stream = AudioSystem.getAudioInputStream(archivo);
            clip = AudioSystem.getClip();
            clip.open(stream);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        this.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent windowEvent){
                clip.stop();
                clip.flush();
                clip.close();
            }
        });
    }

    /**
     * Clase Task, con una función run, que se ejecuta cada 10ms y en un 
     * Hilo diferente y que actualiza la barra de progreso con la duración de 
     * la canción.
     */
    private class Task extends Thread {

        public Task() {
        }

        public void run() {
            while(clip.isActive()) {
                final int progress = clip.getFramePosition() * 100 / clip.getFrameLength();

                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        jbBarrita.setValue(progress);

                    }
                });
                try {
                    Thread.sleep(10);
                } catch (InterruptedException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbBarrita = new javax.swing.JProgressBar();
        jbStart = new javax.swing.JButton();
        jbStop = new javax.swing.JButton();
        jl2 = new javax.swing.JLabel();
        jl1 = new javax.swing.JLabel();
        jbNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jbStart.setText("Start");
        jbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStartActionPerformed(evt);
            }
        });

        jbStop.setText("Stop");
        jbStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStopActionPerformed(evt);
            }
        });

        jl2.setText("CUIDADO CON EL SONIDO, NO HE SABIDO CAMBIARLO. ");

        jbNext.setText("Next");
        jbNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbBarrita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbStart, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbStop, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jl2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jbBarrita, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbStart, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jbStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbNext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Función que se ejecuta al pulsar start, empieza el clip, y crea una 
     * tarea y la inicializa.
     * @param evt  
     */
    private void jbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStartActionPerformed
        try {
            clip.start();
            tarea = new Task();
            tarea.start();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jbStartActionPerformed
    /**
     * Función que se ejecuta al pulsar stop, no es necesario parar el hilo que
     * actualiza la barra de progreso ya que la función que utiliza es calculada
     * conforme a la duración y la posición en la que se encuentra.
     * @param evt 
     */
    private void jbStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStopActionPerformed
        clip.stop();
    }//GEN-LAST:event_jbStopActionPerformed

    private void jbNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNextActionPerformed
        this.dispose();
        clip.stop();
        clip.flush();
        clip.close();
    }//GEN-LAST:event_jbNextActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jbBarrita;
    private javax.swing.JButton jbNext;
    private javax.swing.JButton jbStart;
    private javax.swing.JButton jbStop;
    private javax.swing.JLabel jl1;
    private javax.swing.JLabel jl2;
    // End of variables declaration//GEN-END:variables
}
